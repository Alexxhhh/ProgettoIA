# Treasure Quest – Lore con sistema vite booleano

## 1. Premessa
Sei un avventuriero all’interno di un antico tempio labirintico. Parti dalla stanza 1 (entrance) e devi raggiungere la stanza 17 (treasure_room) senza esaurire le vite.

## 2. Sistema vite (STRIPS)
Predicati iniziali:
  (life1) (life2) (life3)

Azioni fatali consumano le vite nell’ordine:
  lose_life3  – pre: (life3)                          → eff: ¬life3
  lose_life2  – pre: ¬life3 ∧ (life2)                 → eff: ¬life2
  lose_life1  – pre: ¬life3 ∧ ¬life2 ∧ (life1)        → eff: ¬life1 ∧ dead

Goal globale: (and (at treasure_room) (not dead))

## 3. Oggetti di inventario
torch        – per i pipistrelli (bat_room, id 2)
water_cloth  – per il gas (gas_room, id 5)
shield       – per le frecce (arrow_room, id 10)
steel_pole   – per la leva (flood_room, id 15)

## 4. Chiavi
k1 in key_room_1 (11)  → sblocca gas_room  (5)
k2 in key_room_2 (14)  → usata in puzzle
k3 in key_room_3 (8)   → sblocca flood_room (15)
k4 in key_room_4 (3)   → sblocca arrow_room (10)

Predicati esempio:
  (key_in_room k1 key_room_1)
  (key_opens k1 gas_room)
  (locked gas_room)

## 5. Puzzle
p5 Time        – puzzle_room_5 (4)
p6 Seasons     – puzzle_room_6 (7)
p7 Statue      – puzzle_room_7 (12)
p8 Darkness    – puzzle_room_8 (13)
p_ante Entrata – treasure_antechamber (16), single try

## 6. Mappa stanze (id – nome – tipo)
1  entrance                 start
2  bat_room                 trap-item torch
3  key_room_4               key
4  puzzle_room_5            trap-puzzle p5
5  gas_room                 trap-item water_cloth   locked
6  life_room_6              safe
7  puzzle_room_6            trap-puzzle p6
8  key_room_3               key
9  life_room_9              safe
10 arrow_room               trap-item shield        locked
11 key_room_1               key
12 puzzle_room_7            trap-puzzle p7
13 puzzle_room_8            trap-puzzle p8
14 key_room_2               key
15 flood_room               trap-item steel_pole    locked
16 treasure_antechamber     trap-puzzle p_ante
17 treasure_room            goal

## 7. Connessioni (bidirezionali, token direzione n/s/e/w)
connected entrance bat_room n
connected bat_room entrance s
connected entrance puzzle_room_7 e
connected puzzle_room_7 entrance w
connected entrance puzzle_room_8 s
connected puzzle_room_8 entrance n
connected bat_room key_room_4 e
connected key_room_4 bat_room w
connected key_room_4 puzzle_room_5 e
connected puzzle_room_5 key_room_4 w
connected puzzle_room_5 gas_room e          ; k1
connected gas_room puzzle_room_5 w
connected gas_room flood_room s             ; k3
connected flood_room gas_room n
connected gas_room life_room_6 e
connected life_room_6 gas_room w
connected life_room_6 puzzle_room_6 s
connected puzzle_room_6 life_room_6 n
connected puzzle_room_6 key_room_3 s
connected key_room_3 puzzle_room_6 n
connected key_room_3 life_room_9 w
connected life_room_9 key_room_3 e
connected life_room_9 arrow_room w          ; k4
connected arrow_room life_room_9 e
connected life_room_9 key_room_2 n
connected key_room_2 life_room_9 s
connected arrow_room key_room_1 w
connected key_room_1 arrow_room e
connected key_room_1 puzzle_room_7 s
connected puzzle_room_7 key_room_1 n
connected puzzle_room_7 key_room_2 e
connected key_room_2 puzzle_room_7 w
connected puzzle_room_8 key_room_1 e
connected key_room_1 puzzle_room_8 w
connected key_room_2 puzzle_room_8 s
connected puzzle_room_8 key_room_2 n
connected flood_room puzzle_room_6 e
connected puzzle_room_6 flood_room w
connected flood_room life_room_9 s
connected life_room_9 flood_room n
connected flood_room treasure_antechamber w
connected treasure_antechamber flood_room e
connected treasure_antechamber treasure_room n
connected treasure_room treasure_antechamber s

## 8. Fatti iniziali minimi (estratto)
(at entrance)
(has_item torch) (has_item water_cloth) (has_item shield) (has_item steel_pole)
(life1) (life2) (life3)
(key_in_room k1 key_room_1) ...
(key_opens k1 gas_room) (locked gas_room)
(trap_item_room bat_room torch) (trap_active bat_room)
(puzzle_in_room p5 puzzle_room_5) (trap_active puzzle_room_5) (answer_known p5)
...

Goal:
(:goal (and (at treasure_room) (not dead)))
